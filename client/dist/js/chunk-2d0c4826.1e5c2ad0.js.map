{"version":3,"sources":["webpack:///./src/snippets/stream-updates-natively-with-eventsource.vue?1683","webpack:///./src/snippets/stream-updates-natively-with-eventsource.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_m","directives","name","rawName","attrs","staticRenderFns","script","component"],"mappings":"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","file":"js/chunk-2d0c4826.1e5c2ad0.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('article',{staticClass:\"snippet-article\"},[_c('h1',{staticClass:\"hero-title\"},[_vm._v(\"Stream updates natively with with EventSource\")]),_vm._m(0),_vm._m(1),_vm._m(2),_c('pre',{directives:[{name:\"highlightjs\",rawName:\"v-highlightjs\"}]},[_c('code',{staticClass:\"javascript\"},[_vm._v(\"\\n    const evtSource = new EventSource('/connect');\\n\\n    // Listen for \\\"open\\\" event when connected\\n    evtSource.addEventListener('open', () => {\\n      console.log('Persistent connection to server opened');\\n    });\\n\\n    // Listen for \\\"message\\\" event when received from server\\n    evtSource.addEventListener('message', e => {\\n      console.log('Data received: ', e.data);\\n    });\\n  \")])]),_c('p',[_vm._v(\" Here's a NodeJS server example that listens for the initial request and simulates sending periodic events: \")]),_c('pre',{directives:[{name:\"highlightjs\",rawName:\"v-highlightjs\"}]},[_c('code',{staticClass:\"javascript\"},[_vm._v(\"\\n    app.get('/connect', (req, res) => {\\n\\n      // Set headers\\n      res.status(200).set({\\n        'Connection': 'keep-alive',\\n        'Content-Type': 'text/event-stream',\\n        'Cache-Control': 'no-cache'\\n      });\\n\\n      // Broadcast a message with a random # every 2 seconds\\n      setInterval(() => {\\n        const number = Math.floor((Math.random() * 100));\\n        res.write(`data: ${number} \\\\n\\\\n`);\\n      }, 2000);\\n  \")])]),_vm._m(3),_vm._m(4),_vm._m(5),_vm._m(6),_vm._m(7),_c('p'),_c('h3',[_vm._v(\"Links\")]),_c('a',{attrs:{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/API/EventSource\"}},[_vm._v(\"MDN Article on EventSource\")])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" The \"),_c('code',[_vm._v(\"EventSource\")]),_vm._v(\" object is a native Web interface used with server-sent events. If you're not familiar, server-sent events are messages sent by a server to client at any time (and not necessarily as an immediate response to a request like the tradition client-server model). \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" The most typical use case for using \"),_c('code',[_vm._v(\"EventSource\")]),_vm._v(\" is wherever you need to broadcast periodic events from your server, such as an online stock quote application or perhaps a social medial site where users can see real-time notifications. Using \"),_c('code',[_vm._v(\"EventSource\")]),_vm._v(\", you can open a persistent connection to your server and push events to your client without the need to constantly poll for updates. \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" To see how this works, first create a new \"),_c('code',[_vm._v(\"EventSource\")]),_vm._v(\" in your client code. The first argument is the URL of the server serving the events. From there, you can add event listeners for the \"),_c('code',[_vm._v(\"open\")]),_vm._v(\" and \"),_c('code',[_vm._v(\"message\")]),_vm._v(\" events: \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" Some caveats: First, the headers should be exactly as shown since the events are sent in \"),_c('code',[_vm._v(\"text/event-stream\")]),_vm._v(\" format and the connection needs to be kept alive with no caching. \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" Secondly, when testing this, I had trouble receiving events on the client until I read that the event stream response format is very particular. The response text must begin with \"),_c('code',[_vm._v(\"data: \")]),_vm._v(\". The custom message should follow and the line must be terminated with 2 \"),_c('code',[_vm._v(\"\\\\n\")]),_vm._v(\" characters otherwise the message will not be sent. You can send bigger bits of data by simply using \"),_c('code',[_vm._v(\"JSON.stringify()\")]),_vm._v(\" on an object. \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" When you wish to close the connection simply run \"),_c('code',[_vm._v(\"evtSource.close()\")]),_vm._v(\". \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" There's a bunch more on \"),_c('code',[_vm._v(\"EventSource\")]),_vm._v(\" you can read on the MDN article linked below but that's how it works in a nutshell. What's really cool is that it's available natively in all modern browsers and is a much lighterweight alternative to using a websocket library when all you need to do is broadcast events (websocket are needed for full-duplex communications however). \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" Lastly, althougth \"),_c('code',[_vm._v(\"EventSource\")]),_vm._v(\" has been around forever, I first read about it as a sneaky way hackers can open connections to a malicious server in a XSS attack. Even if Security Ops are monitoring requests by watching \"),_c('code',[_vm._v(\"fetch\")]),_vm._v(\" events or \"),_c('code',[_vm._v(\"XMLHttpRequest\")]),_vm._v(\", \"),_c('code',[_vm._v(\"EventSource\")]),_vm._v(\" may not always be noticed (perhaps because it's more obscure?). In any case, it's a pretty cool tool to use when the situation calls for it! ðŸ“¡ \")])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./stream-updates-natively-with-eventsource.vue?vue&type=template&id=fe5f8b60&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}