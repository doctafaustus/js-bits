(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0a38dc"],{"0358":function(e,r,t){"use strict";t.r(r);var n=function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("article",{staticClass:"snippet-article"},[t("h1",{staticClass:"hero-title"},[e._v("window.onerror()")]),t("p",[e._v("Easily capture and report on global errors with window.error.")]),t("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[t("code",{staticClass:"javascript"},[e._v("\n    // The \"error\" event fires when an uncaught error is thrown\n    window.addEventListener('error', function(event) {\n      console.log('Captured error:', event);\n    });\n  ")])]),t("p",[e._v(" Inside the error object, you'll get all sorts of information including the error message, target element, and even the stack trace. ")]),t("img",{attrs:{src:"https://res.cloudinary.com/dormh2fvt/image/upload/v1593979946/JS%20Bits/chrome_gKb5SjwUmX.png"}}),t("p",[e._v(" This is how a lot of error logging platforms capture client-side errors: the event listener can be added globally and the callback can send the error date to a server where you can do all sorts of things with it. Neat! ðŸ˜Ž ")])])},a=[],o=t("2877"),s={},i=Object(o["a"])(s,n,a,!1,null,null,null);r["default"]=i.exports}}]);
//# sourceMappingURL=chunk-2d0a38dc.2b00e563.js.map