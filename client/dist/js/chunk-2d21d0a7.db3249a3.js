(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d21d0a7"],{d038:function(e,t,n){"use strict";n.r(t);var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("article",{staticClass:"snippet-article"},[n("h1",{staticClass:"hero-title"},[e._v("debug()")]),n("p",[e._v("The Chrome console includes a helper method called debug that will pause execution in the debugger on the first line of a provided function.")]),n("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[n("code",{staticClass:"javascript"},[e._v("\n    function greeting(msg) {\n      console.log(msg);\n    }\n\n    // Debug the greeting function whenever it gets called\n    debug(greeting);\n\n    // Once greeting is called the Sources panel in DevTools will automatically open\n    greeting('Hello World!');\n  ")])]),n("img",{attrs:{src:"https://res.cloudinary.com/dormh2fvt/image/upload/v1600297358/JS%20Bits/chrome-p6-KVK2-Mc-AH.webp"}}),e._m(0)])},a=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v(" When using "),n("code",[e._v("debug")]),e._v(", the breakpoint is added to the function definition and paused regardless of where it is called. So this is just a quick way to see if and how a function is being called without having to add your own logs to it or manually track it down in the Sources to add a breakpoint! âš¡ ")])}],o=n("2877"),s={},l=Object(o["a"])(s,i,a,!1,null,null,null);t["default"]=l.exports}}]);
//# sourceMappingURL=chunk-2d21d0a7.db3249a3.js.map