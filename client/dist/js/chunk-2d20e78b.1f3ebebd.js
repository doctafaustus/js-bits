(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d20e78b"],{b007:function(e,n,t){"use strict";t.r(n);var r=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("article",{staticClass:"snippet-article"},[t("h1",{staticClass:"hero-title"},[e._v("Argument Validation")]),t("p",[e._v("Here's a clean way to validate function parameters:")]),t("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[t("code",{staticClass:"javascript"},[e._v("\n    // Define an exception fn\n    function throwRequiredErr() {\n      throw new Error('Argument required!');\n    }\n\n    // Custom function with exception fn as default param\n    function greet(person = throwRequiredErr()) {\n      console.log(`Hello ${person}!`);\n    }\n\n    // Calling greet w/out arg will throw the exception\n    greet(); // throwRequiredErr is called and execution pauses\n\n    greet('Oliver'); // Logs 'Oliver'\n\n    // Note some edge cases:\n    greet(undefined); // Throws error\n    greet(false); // No error\n    greet(null);// No error\n  ")])]),e._m(0),t("p",[e._v("Now no one can screw up their greeting! ðŸ‘‹")])])},o=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("p",[e._v(" Essentially, we can create an exception function that we set as a default parameter to our custom function. If a "),t("code",[e._v("person")]),e._v(" argument is supplied to our function then it will proceed as normal. However, if "),t("code",[e._v("person")]),e._v(" is undefined, the exception fun will execute, throw the error, and pause execution. ")])}],i=t("2877"),a={},s=Object(i["a"])(a,r,o,!1,null,null,null);n["default"]=s.exports}}]);
//# sourceMappingURL=chunk-2d20e78b.1f3ebebd.js.map